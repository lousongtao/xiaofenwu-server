<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

  <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
  
  <!-- enable json pretty print -->
  <beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
  </beans:bean>
  <beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
    <beans:property name="messageConverters">
      <beans:list>
        <beans:bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
          <!-- <beans:property name="prettyPrint" value="false"/> -->
          <beans:property name="prettyPrint" value="true"/>
        </beans:bean>
      </beans:list>
    </beans:property>
  </beans:bean>

  
  <!-- Enables the Spring MVC @Controller programming model -->
  <annotation-driven />
  
  
  <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
  <mvc:resources mapping="/*.js" location="/" />
  <mvc:resources mapping="/*.html" location="/" />
  <mvc:resources mapping="/app/**" location="/app/" />
  <mvc:resources mapping="/extjs/**" location="/extjs/" />
  <mvc:resources mapping="/metadata/**" location="/metadata/" />
  <mvc:resources mapping="/theme/**" location="/theme/" />
  <mvc:resources mapping="/images/**" location="/images/" />
  <mvc:resources mapping="/cssstyle/**" location="/cssstyle/" />

  <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
  <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <beans:property name="prefix" value="/WEB-INF/views/" />
    <beans:property name="suffix" value=".jsp" />
  </beans:bean>
  

  <context:component-scan base-package="com.shuishou.retailer.**" />
  
  <beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    <beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
    <beans:property name="url" value="jdbc:mysql://localhost:3306/retailer?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=UTF-8" />
    <beans:property name="username" value="root" />
    <beans:property name="password" value="root" />    
  </beans:bean>

  <tx:annotation-driven transaction-manager="transactionManager"/>
  <beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
    <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
  </beans:bean>

  <beans:bean id="hibernate4AnnotatedSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
    <beans:property name="dataSource" ref="dataSource"></beans:property>
    <beans:property name="packagesToScan">
      <beans:list>
        <beans:value>com.shuishou.retailer.account.models</beans:value>
        <beans:value>com.shuishou.retailer.log.models</beans:value>
        <beans:value>com.shuishou.retailer.goods.models</beans:value>
        <beans:value>com.shuishou.retailer.common.models</beans:value>
        <beans:value>com.shuishou.retailer.management.models</beans:value>
        <beans:value>com.shuishou.retailer.indent.models</beans:value>
        <beans:value>com.shuishou.retailer.member.models</beans:value>
      </beans:list>
    </beans:property>
    <beans:property name="hibernateProperties">
      <beans:props>
        <beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</beans:prop>
        <beans:prop key="hibernate.show_sql">true</beans:prop>
        <beans:prop key="hibernate.format_sql">true</beans:prop>
        <beans:prop key="hibernate.use_sql_comments">true</beans:prop>
        <beans:prop key="hibernate.auto_close_session">true</beans:prop>
        <beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
        
		<beans:prop key="hibernate.c3p0.min_size">2</beans:prop>
        <beans:prop key="hibernate.c3p0.max_size">20</beans:prop>
        <beans:prop key="hibernate.c3p0.timeout">1800</beans:prop>
        <beans:prop key="hibernate.c3p0.max_statements">50</beans:prop>

        <!-- Enable the second-level cache  -->
        <beans:prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory</beans:prop>
        <beans:prop key="hibernate.cache.use_second_level_cache">true</beans:prop>
        <beans:prop key="hibernate.cache.use_query_cache">true</beans:prop>
      </beans:props>
    </beans:property>
  </beans:bean>
  
  
</beans:beans>
